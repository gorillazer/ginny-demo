// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/goriller/ginny"
	config2 "github.com/goriller/ginny-demo/internal/config"
	"github.com/goriller/ginny-demo/internal/repo"
	"github.com/goriller/ginny-demo/internal/service"
	"github.com/goriller/ginny/config"
	"github.com/goriller/ginny/logger"
	"github.com/goriller/ginny/server"
)

import (
	_ "go.uber.org/automaxprocs/maxprocs"
)

// Injectors from provider.go:

// NewApp
func NewApp() (*ginny.Application, error) {
	viper, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	option, err := ginny.NewOption(viper)
	if err != nil {
		return nil, err
	}
	zapLogger := logger.Default()
	configConfig, err := config2.NewConfig(viper)
	if err != nil {
		return nil, err
	}
	userRepository := repo.NewUserRepository()
	serviceService := service.NewService(configConfig, userRepository)
	registrarFunc := service.RegisterService(serviceService)
	v := serverOption()
	application, err := ginny.NewApp(option, zapLogger, registrarFunc, v...)
	if err != nil {
		return nil, err
	}
	return application, nil
}

// provider.go:

func serverOption() (opts []server.Option) {

	return
}
